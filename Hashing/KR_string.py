import random
def generate_prime():
    def isprime(x):
        i = 2
        flag = True
        while (i * i <= x):
            if x % i == 0:
                flag = False
                break
            i += 1
        return flag
    ran = random.randint(2, 10)
    while (isprime(ran) == False):
        ran = random.randint(2, 10)
    return ran

def hashshiftR(stra, prime, start, length, val):
    val -= ord(stra[start])
    val /= prime
    val += ord(stra[start + length]) * (prime ** (length - 1))
    return val

def hashstr(stra, prime, length):
    val = 0
    for i in range(length):
        val += ord(stra[i]) * (prime ** i)
    return val

def KR_string(stra, strb):
    if (len(strb) > len(stra)):
        return -1
    prime = generate_prime()
    hasha = hashstr(stra, prime, len(strb))
    hashb = hashstr(strb, prime, len(strb))
    if hasha == hashb and stra[:len(b)] == strb:
        return 0
    hashb /= 1.0
    for i in range(len(stra) - len(strb)):
        hasha = hashshiftR(stra, prime, i, len(strb), hasha)
        #print(hasha, hashb, i)
        if hasha == hashb and stra[i + 1:len(b) + i + 1] == strb:
            return i + 1
    return -1


if __name__ == "__main__": 
    a ="""ATGCUAGCSDSFDFDFDFGFBGVCBCXVCSDFDSFDSFTRTGRYFGHDFGDFGCXVXVCXFVCXVCXVCXVCXVXXCXCVVCXVFGHFHGJGHJHKJHKHJMKHJKMHNVBNVCNBVCBCVB1234567890123456789000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ATGCUAGCSDSFDFDFDFGFBGVCBCXVCSDFDSFD"SFTRTGRYFGHDFGDFGCXVXVCXFVCXVCXVCXVCXVXXCXCVVCXVFGHFHGJGHJHKJHKHJMKHJKMHNVBNVCNBVCBCVB12345678901234567890000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012344SFTRTGRYGHDFGDFGCXVXVCXFVCXVCXVCXVCXVXXCXCVVCXVFGHFHGJGHJHKJHKHJMKHJKMHNVBNVCNBVCBCVB12345678901234567890000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000123445"""
    b = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000123445"
    c = "00000000000000000000000000000000000000000000000000000000123445"
    print(KR_string(a, c))

